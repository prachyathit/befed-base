<div id="map-modal" class="modal fade">
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <!-- <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button> -->
        <h4 class="modal-title">Pin your location</h4>
      </div>
      <div class="modal-body">
        <div class="row">
          <span class="tooltips col-xs-1">
            <span class="tooltipstext">Get my current location</span>
            <span id="currentLocationBtn" class="location-arrow-wrapper btn btn-danger">
              <i class="fa fa-location-arrow strong"></i>
            </span>
            <span class="spinning-icon-wrapper btn btn-danger hide"><i class="fa fa-spinner fa-spin strong"></i></span>
          </span>
          <div class="col-xs-11">
            <%= text_field_tag :locationSearch, '', { placeholder: 'Search Google Maps', type: 'search', class: 'form-control' } %>
          </div>
        </div>
        <div id="map" style="height: 350px;">
          
        </div>
      </div>
      <div class="modal-footer">
        <a id="cancelAddress" href="javascript:;" class="btn btn-default">Cancel</a>
        <button id="useAddress" type="button" class="btn btn-primary">
          Use this address
        </button>
      </div>
    </div>
  </div>
</div>

<script type="text/javascript">
  $(document).ready(function() {
    if (!urlContainParam('latitude') || !urlContainParam('longitude')) {
      $("#map-modal").modal({
        backdrop: 'static',
        keyboard: false
      });
      $("#map-modal").modal("show");
      $("#map-modal-edit").modal("show");
    }
  });

  // Note: This example requires that you consent to location sharing when
  // prompted by your browser. If you see the error "The Geolocation service
  // failed.", it means you probably did not give permission for the browser to
  // locate you.

  var map;
  var marker;
  var currentPosition = {lat: 13.7563, lng: 100.5018};
  var address;
  var addressInput;

  function initMap() {
    map = new google.maps.Map(document.getElementById('map'), {
      center: currentPosition,
      zoom: 14
    });
    setMarkerToPosition();
    initAutoComplete();
    initGetCurrentLocation();
    getCurrentLocation();
  }

  function initAutoComplete(){
    addressInput = document.getElementById('locationSearch');
    var options = {
      // Restrict the search to Thailand
      componentRestrictions: {country: 'th'}
    };
    autocomplete = new google.maps.places.Autocomplete(addressInput, options);
    autocomplete.addListener('place_changed', function(){
      var place = autocomplete.getPlace();
      console.log(place);
      currentPosition = {
        lat: place.geometry.location.lat(),
        lng: place.geometry.location.lng()
      };
      map.setCenter(currentPosition);
      setMarkerToPosition();
    });
  }

  function initGetCurrentLocation(){
    $("#currentLocationBtn").click(function() {
      getCurrentLocation();
      $(".location-arrow-wrapper").addClass("hide");
      $(".spinning-icon-wrapper").removeClass("hide");
    });
  }

  function getCurrentLocation(){
    // Try HTML5 geolocation.
    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(function(position) {
        currentPosition = {
          lat: position.coords.latitude,
          lng: position.coords.longitude
        };
        map.setCenter(currentPosition);
        setMarkerToPosition();

        $(".location-arrow-wrapper").removeClass("hide");
        $(".spinning-icon-wrapper").addClass("hide");
      }, function() {
        // Cannot get location
        alert("We can't locate your current location. Please grant a permission in your browser to locate your device");

        $(".location-arrow-wrapper").removeClass("hide");
        $(".spinning-icon-wrapper").addClass("hide");
      });
    } else {
      // Browser doesn't support Geolocation
      alert('Your browser doesn\'t support geolocation.');
      $(".location-arrow-wrapper").removeClass("hide");
      $(".spinning-icon-wrapper").addClass("hide");
    }
    
  }

  function setMarkerToPosition(){
    if(marker == null) {
      marker = new google.maps.Marker({
        position: currentPosition,
        map: map,
        // title: 'Hello World!',
        draggable: true
      });
      marker.addListener('dragend', function(event) {
        currentPosition = marker.position;
        geocodeLatLng();
      });
    } else {
      marker.setMap(null);
      marker.setPosition(currentPosition);
      marker.setMap(map);
    }
    geocodeLatLng();
  }

  function addEventListener() {
    $('#useAddress').on('click', function(){
      var params = {
        address: address,
        latitude: currentPosition.lat,
        longitude: currentPosition.lng
      };
      window.location = "<%= submit_url %>?"+jQuery.param(params);
    });
    $('#cancelAddress').on('click', function(){
      window.location = "<%= cancel_url %>";
    });
  }

  function urlContainParam(param) {
    var url = window.location.href;
    if(url.indexOf('?' + param + '=') != -1)
      return true;
    else if(url.indexOf('&' + param + '=') != -1)
      return true;
    return false
  }

  function geocodeLatLng() {
    var geocoder = new google.maps.Geocoder;
    geocoder.geocode({'location': currentPosition}, function(results, status) {
      if (status === 'OK') {
        if (results[1]) {
          address = {};
          results[0].address_components.forEach(function(component){
            if(component.types.includes('street_number')){
              address['house_room_no'] = component.long_name;
            } else if(component.types.includes('premise')){
              address['building_name'] = component.long_name;
            } else if(component.types.includes('route')){
              address['street'] = component.long_name;
            } else if(component.types.includes('sublocality_level_1')){
              address['district'] = component.long_name;
            } else if(component.types.includes('sublocality_level_2')){
              address['subdistrict'] = component.long_name;
            } else if(component.types.includes('locality') && 
                component.types.includes('political')){
              address['province'] = component.long_name;
            } else if(component.types.includes('postal_code')){
              address['postal_code'] = component.long_name;
            } else if(component.types.includes('country')){
            }
          });
          addressInput.value = results[1].formatted_address;
        } else {
          window.alert('No results found');
        }
      } else {
        window.alert('Geocoder failed due to: ' + status);
      }
    });
  }

</script>
<script async defer
  src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBLod8mAcjj-5mmficTg-cu2W-BhEu6Cgs&callback=initMap&libraries=places">
  // AIzaSyCwhcezDLA4hI2yH4uZxzKTKH_y1RoONUY
</script>